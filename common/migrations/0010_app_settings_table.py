# Generated by Django 4.2.1 on 2025-01-06 13:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0009_user_is_staff'),
    ]

    operations = [
        migrations.AlterField(
            model_name='attachments',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachment_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(choices=[('allow_google_login', 'Allow Google Login'), ('allow_login_without_invitation', 'Allow Login Without Invitation')], max_length=255, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('bool', 'True/False'), ('int', 'Number'), ('str', 'Text')], max_length=15)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
            ],
            options={
                'verbose_name': 'AppSettings',
                'verbose_name_plural': 'AppSettings',
                'db_table': 'app_settings',
            },
        ),
        migrations.AddConstraint(
            model_name='appsettings',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('type', 'bool'), ('value__in', ['True', 'False'])), models.Q(('type', 'int'), ('value__regex', '^\\d+$')), _connector='OR'), name='value_type_constraint'),
        ),
    ]
